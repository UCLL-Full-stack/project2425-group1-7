generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL") 
}

model User{
    id Int @id @default(autoincrement())
    createdAt DateTime @default(now())
    email String @unique
    username String @unique
    password String
    role String @default("user")
    isBlocked Boolean @default(false)
    followedBy User[] @relation("UserFollows")
    following User[] @relation("UserFollows")
    lists List[]
    reviews Review[]
    comments Comment[]
    likedReviews Review[] @relation("userLikesReview")
    likedLists List[] @relation("userLikesList")
}

model Review{
    id Int @id @default(autoincrement())
    createdAt DateTime @default(now())
    title String @db.VarChar(255)
    body String @db.VarChar(2048)
    starRating Int
    albumID String @db.VarChar(255)
    likes User[] @relation("userLikesReview")
    authorId Int
    author User @relation(fields: [authorId], references: [id])
    comments Comment[]
}

model List{
    id Int @id @default(autoincrement())
    createdAt DateTime @default(now())
    title String @db.VarChar(255)
    description String
    authorId Int
    author User @relation(fields: [authorId], references: [id])
    likes User[] @relation("userLikesList")
    albumIds String[]
}

model Comment{
    id Int @id @default(autoincrement())
    createdAt DateTime @default(now())
    body String @db.VarChar(2048)
    authorId Int
    author User @relation(fields: [authorId], references: [id])
    reviewId Int
    review Review @relation(fields: [reviewId], references: [id])
}
